import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as h,c as b,a as e,b as n,e as s,w as i,d,r}from"./app.066b0f7d.js";const m={},v=e("h1",{id:"hacking-the-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hacking-the-core","aria-hidden":"true"},"#"),n(" Hacking the Core")],-1),g={class:"custom-container warning"},k=e("p",{class:"custom-container-title"},"Under Construction",-1),f=e("h2",{id:"building-pulsar",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-pulsar","aria-hidden":"true"},"#"),n(" Building Pulsar")],-1),_=e("p",null,"If you want to investigate a bug, implement a new feature in Pulsar's core or just want to tinker then you will need to build and run Pulsar from source.",-1),x={href:"https://github.com/pulsar-edit/pulsar",target:"_blank",rel:"noopener noreferrer"},y=e("h3",{id:"requirements-and-dependencies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements-and-dependencies","aria-hidden":"true"},"#"),n(" Requirements and dependencies")],-1),w=e("p",null,"To build Pulsar you will need to meet some basic requirements:",-1),P={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},T=e("li",null,[n("yarn (enable with "),e("code",null,"corepack enable"),n(")")],-1),A=e("li",null,"Git",-1),O=e("li",null,"Python",-1),I=e("li",null,"C++ toolchain",-1),N={href:"https://wiki.gnome.org/Projects/Libsecret",target:"_blank",rel:"noopener noreferrer"},M=e("p",null,"For OS or distribution specific instructions see below:",-1),j=e("h4",{id:"ubuntu-debian",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ubuntu-debian","aria-hidden":"true"},"#"),n(" Ubuntu/Debian")],-1),q=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# Install development packages"),n(`

`),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` build-essential libxkbfile-dev libsecret-1-dev libx11-dev

`),e("span",{class:"token comment"},"# Install Node16 (using `nvm` - see above) and enable corepack (for `yarn`)"),n(`

nvm `),e("span",{class:"token function"},"install"),n(),e("span",{class:"token number"},"16"),n(`
corepack `),e("span",{class:"token builtin class-name"},"enable"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),H=e("h4",{id:"fedora-rhel",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fedora-rhel","aria-hidden":"true"},"#"),n(" Fedora/RHEL")],-1),L=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# Install development packages"),n(`

dnf `),e("span",{class:"token parameter variable"},"--assumeyes"),n(),e("span",{class:"token function"},"install"),n(),e("span",{class:"token function"},"make"),n(` gcc gcc-c++ glibc-devel git-core libsecret-devel rpmdevtools libX11-devel libxkbfile-devel nss atk gdk-pixbuf2 gtk3 mesa-dri-drivers

`),e("span",{class:"token comment"},"# Install Node16 (using `nvm` - see above) and enable corepack (for `yarn`)"),n(`

nvm `),e("span",{class:"token function"},"install"),n(),e("span",{class:"token number"},"16"),n(`
corepack `),e("span",{class:"token builtin class-name"},"enable"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),E=e("h4",{id:"arch",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arch","aria-hidden":"true"},"#"),n(" Arch")],-1),S=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,`TODO: Arch instructions
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),B=e("h4",{id:"opensuse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#opensuse","aria-hidden":"true"},"#"),n(" OpenSUSE")],-1),C=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# Install development packages"),n(`

`),e("span",{class:"token function"},"zypper"),n(),e("span",{class:"token keyword"},"in"),n(),e("span",{class:"token parameter variable"},"-t"),n(` pattern devel_basis
`),e("span",{class:"token function"},"zypper"),n(),e("span",{class:"token keyword"},"in"),n(` libX11-devel libxkbfile-devel libsecret-devel

`),e("span",{class:"token comment"},"# Install Node16 (using `nvm` - see above) and enable corepack (for `yarn`)"),n(`

nvm `),e("span",{class:"token function"},"install"),n(),e("span",{class:"token number"},"16"),n(`
corepack `),e("span",{class:"token builtin class-name"},"enable"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),D=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,`TODO
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),R={href:"https://visualstudio.microsoft.com/downloads/",target:"_blank",rel:"noopener noreferrer"},U=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# Install Node16 (using `nvm` - see above) and enable corepack (for `yarn`)"),n(`

nvm `),e("span",{class:"token function"},"install"),n(),e("span",{class:"token number"},"16"),n(`
corepack `),e("span",{class:"token builtin class-name"},"enable"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),V=d(`<h3 id="building-and-running-the-application" tabindex="-1"><a class="header-anchor" href="#building-and-running-the-application" aria-hidden="true">#</a> Building and running the application</h3><p>To build the application so you can start hacking on the core you will need to download the source code to your local machine and <code>cd</code> to the pulsar directory:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/pulsar-edit/pulsar.git <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> pulsar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Make sure you are using the correct version of Node.js as described in the <a href="#requirements-and-dependencies">requirements</a>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run the following to initialize and update the submodules:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> submodule init <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> submodule update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now install and build Pulsar &amp; ppm:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>
<span class="token function">yarn</span> build
<span class="token function">yarn</span> build:apm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Start Pulsar!</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>These instructions will also build <code>ppm</code> (Pulsar Package Manager) but it will require some <a href="#using-ppm-pulsar-package-manager">additional configuration</a> for use.</p><h2 id="using-ppm-pulsar-package-manager" tabindex="-1"><a class="header-anchor" href="#using-ppm-pulsar-package-manager" aria-hidden="true">#</a> Using ppm (Pulsar Package Manager)</h2><p><code>ppm</code> is used for installing and managing Pulsar&#39;s packages in much the same way that <code>apm</code> did on Atom. However at this point in the project there are a few hoops you have to jump through to get it to work correctly.</p><p>After following the build instructions you will find the <code>ppm</code> binary at <code>pulsar/ppm/bin/apm</code> but by default Pulsar will be looking in the wrong place. To solve this a couple of environmental variables need to be exported.</p>`,15),F=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"ATOM_HOME"),e("span",{class:"token operator"},"="),n("/home/"),e("span",{class:"token operator"},"<"),n("user"),e("span",{class:"token operator"},">"),n(`/.pulsar
`),e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"APM_PATH"),e("span",{class:"token operator"},"="),n(`/ppm/bin/apm
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),z=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,`TODO
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),G=e("div",{class:"language-bash ext-sh line-numbers-mode"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"ATOM_HOME"),e("span",{class:"token operator"},"="),n("C:"),e("span",{class:"token punctuation"},"\\"),n("Users"),e("span",{class:"token punctuation"},"\\"),e("span",{class:"token operator"},"<"),n("user"),e("span",{class:"token operator"},">"),e("span",{class:"token punctuation"},"\\"),n(`.pulsar
`),e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"APM_PATH"),e("span",{class:"token operator"},"="),e("span",{class:"token punctuation"},"\\"),n("ppm"),e("span",{class:"token punctuation"},"\\"),n("bin"),e("span",{class:"token punctuation"},"\\"),n(`apm
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),W=d(`<p>You can now use the binary to link or install packages.</p><p>For example to install the <code>ide-java</code> package from source:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># clone the repository and cd into it</span>
<span class="token function">git</span> clone https://github.com/pulsar-edit/ide-java
<span class="token builtin class-name">cd</span> ide-java

<span class="token comment"># from the directory where you are running pulsar source code</span>
<span class="token operator">&lt;</span>pulsar source<span class="token operator">&gt;</span>/ppm/bin/apm <span class="token function">link</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="having-trouble" tabindex="-1"><a class="header-anchor" href="#having-trouble" aria-hidden="true">#</a> Having trouble?</h2><p>If you have any issues then please feel free to ask for help from the Pulsar Team:</p>`,5),X={href:"https://discord.gg/7aEbB9dGRT",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.reddit.com/r/pulsaredit/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/pulsar-edit/pulsar/discussions",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/pulsar-edit/pulsar/issues",target:"_blank",rel:"noopener noreferrer"};function Q(Z,$){const u=r("RouterLink"),a=r("ExternalLinkIcon"),c=r("Tabs");return h(),b("div",null,[v,e("div",g,[k,e("p",null,[n("This document is under construction, please check back soon for updates. Please see "),s(u,{to:"/docs/launch-manual/sections/faq/#having-trouble"},{default:i(()=>[n("our socials")]),_:1}),n(" and feel free to ask for assistance or inquire as to the status of this document.")])]),f,_,e("p",null,[n("The Pulsar application code can be found in the "),e("a",x,[n("pulsar-edit/pulsar"),s(a)]),n(" repository.")]),y,w,e("ul",null,[e("li",null,[n("Node.js 16 (recommended installation is via "),e("a",P,[n("nvm"),s(a)]),n(")")]),T,A,O,I,e("li",null,[e("a",N,[n("Libsecret"),s(a)]),n(" development headers")])]),M,s(c,{data:[{title:"Linux"},{title:"macOS"},{title:"Windows"}]},{tab0:i(({title:l,value:t,isActive:o})=>[j,q,H,L,E,S,B,C]),tab1:i(({title:l,value:t,isActive:o})=>[D]),tab2:i(({title:l,value:t,isActive:o})=>[e("p",null,[n("Firstly install "),e("a",R,[n("Visual Studio"),s(a)]),n(" from Microsoft.")]),U]),_:1}),V,s(c,{data:[{title:"Linux"},{title:"macOS"},{title:"Windows"}]},{tab0:i(({title:l,value:t,isActive:o})=>[F]),tab1:i(({title:l,value:t,isActive:o})=>[z]),tab2:i(({title:l,value:t,isActive:o})=>[G]),_:1}),W,e("ul",null,[e("li",null,[e("a",X,[n("Discord server"),s(a)])]),e("li",null,[e("a",Y,[n("subreddit"),s(a)])]),e("li",null,[e("a",J,[n("GitHub Discussions"),s(a)])])]),e("p",null,[n("If you think you have found a bug then please create a "),e("a",K,[n("new issue"),s(a)]),n(".")])])}const se=p(m,[["render",Q],["__file","index.html.vue"]]);export{se as default};
